{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Serendivity\\\\Documents\\\\GitHub\\\\pti-uas\\\\src\\\\pages\\\\Map5\\\\Map5.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { loadModules } from 'esri-loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  const MapEl = useRef(null);\n  useEffect(() => {\n    let view;\n    let track;\n    loadModules([\"esri/config\", \"esri/views/MapView\", \"esri/WebMap\", \"esri/widgets/Track\", \"esri/Graphic\", \"esri/rest/locator\", \"esri/widgets/BasemapGallery\", \"esri/widgets/Expand\", \"esri/views/SceneView\"], {\n      css: true\n    }).then(_ref => {\n      let [esriConfig, MapView, WebMap, Track, Graphic, locator, BasemapGallery, Expand, SceneView] = _ref;\n      esriConfig.apiKey = \"AAPK646fc7baa89c4b608eb58b54dbbbe1066JR7fGrtnfyFPoTQnl4Z7yp0rUqUJMjQUrurVPBVnBAt75VOFZL-g-La4SwrdiZf\";\n      const map = new WebMap({\n        basemap: 'streets'\n      });\n      view = new SceneView({\n        map: map,\n        center: [106.6182, -6.2567],\n        // Longitude, latitude\n        zoom: 3,\n        // Zoom level\n        container: \"MapEl\" // Div element\n\n      });\n      track = new Track({\n        view: view,\n        graphic: new Graphic({\n          symbol: {\n            type: \"simple-marker\",\n            size: \"12px\",\n            color: \"green\",\n            outline: {\n              color: \"#efefef\",\n              width: \"1.5px\"\n            }\n          }\n        }),\n        useHeadingEnabled: false\n      });\n      view.ui.add(track, \"top-left\");\n      const places = [\"Choose a place type...\", \"Parks and Outdoors\", \"Coffee shop\", \"Gas station\", \"Food\", \"Hotel\"];\n      const select = document.createElement(\"select\", \"\");\n      select.setAttribute(\"class\", \"esri-widget esri-select\");\n      select.setAttribute(\"style\", \"width: 175px; font-family: 'Avenir Next W00'; font-size: 1em\");\n      places.forEach(function (p) {\n        const option = document.createElement(\"option\");\n        option.value = p;\n        option.innerHTML = p;\n        select.appendChild(option);\n      });\n      view.ui.add(select, \"top-right\");\n      const locatorUrl = \"http://geocode-api.arcgis.com/arcgis/rest/services/World/GeocodeServer\";\n\n      function findPlaces(category, pt) {\n        locator.addressToLocations(locatorUrl, {\n          location: pt,\n          categories: [category],\n          maxLocations: 25,\n          outFields: [\"Place_addr\", \"PlaceName\"]\n        }).then(function (results) {\n          view.popup.close();\n          view.graphics.removeAll();\n          results.forEach(function (result) {\n            view.graphics.add(new Graphic({\n              attributes: result.attributes,\n              // Data attributes returned\n              geometry: result.location,\n              // Point returned\n              symbol: {\n                type: \"simple-marker\",\n                color: \"#000000\",\n                size: \"12px\",\n                outline: {\n                  color: \"#ffffff\",\n                  width: \"2px\"\n                }\n              },\n              popupTemplate: {\n                title: \"{PlaceName}\",\n                // Data attribute names\n                content: \"{Place_addr}\"\n              }\n            }));\n          });\n        });\n      }\n\n      view.watch(\"stationary\", function (val) {\n        if (val) {\n          findPlaces(select.value, view.center);\n        }\n      });\n      select.addEventListener('change', function (event) {\n        findPlaces(event.target.value, view.center);\n      });\n      var basemapGallery = new BasemapGallery({\n        view: view,\n        container: document.createElement(\"div\"),\n        source: {\n          query: {\n            title: '\"World Basemaps for Developers\" AND owner:esri'\n          }\n        }\n      });\n      var bgExpand = new Expand({\n        view: view,\n        content: basemapGallery.domNode,\n        expandIconClass: \"esri-icon-basemap\"\n      });\n      view.ui.add(bgExpand, \"bottom-right\");\n    });\n    return () => {\n      //close the map view\n      if (!!view) {\n        view.destroy();\n        view = null;\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    id: \"MapEl\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 578.5\n      },\n      ref: MapEl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Map, \"dLai3TP5cCTXs05QUy3y0rC216M=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/Serendivity/Documents/GitHub/pti-uas/src/pages/Map5/Map5.js"],"names":["React","useRef","useEffect","loadModules","Map","MapEl","view","track","css","then","esriConfig","MapView","WebMap","Track","Graphic","locator","BasemapGallery","Expand","SceneView","apiKey","map","basemap","center","zoom","container","graphic","symbol","type","size","color","outline","width","useHeadingEnabled","ui","add","places","select","document","createElement","setAttribute","forEach","p","option","value","innerHTML","appendChild","locatorUrl","findPlaces","category","pt","addressToLocations","location","categories","maxLocations","outFields","results","popup","close","graphics","removeAll","result","attributes","geometry","popupTemplate","title","content","watch","val","addEventListener","event","target","basemapGallery","source","query","bgExpand","domNode","expandIconClass","destroy","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAMC,KAAK,GAAGJ,MAAM,CAAC,IAAD,CAApB;AAEAC,EAAAA,SAAS,CACL,MAAM;AACF,QAAII,IAAJ;AACA,QAAIC,KAAJ;AAEAJ,IAAAA,WAAW,CAAC,CAAC,aAAD,EAAgB,oBAAhB,EAAsC,aAAtC,EAAqD,oBAArD,EAA2E,cAA3E,EAA2F,mBAA3F,EAAgH,6BAAhH,EAA+I,qBAA/I,EAAsK,sBAAtK,CAAD,EAAgM;AACvMK,MAAAA,GAAG,EAAE;AADkM,KAAhM,CAAX,CAEGC,IAFH,CAEQ,QAA+F;AAAA,UAA9F,CAACC,UAAD,EAAaC,OAAb,EAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,OAArC,EAA8CC,OAA9C,EAAuDC,cAAvD,EAAuEC,MAAvE,EAA+EC,SAA/E,CAA8F;AACnGR,MAAAA,UAAU,CAACS,MAAX,GAAoB,sGAApB;AAEA,YAAMC,GAAG,GAAG,IAAIR,MAAJ,CAAW;AACnBS,QAAAA,OAAO,EAAE;AADU,OAAX,CAAZ;AAIAf,MAAAA,IAAI,GAAG,IAAIY,SAAJ,CAAc;AACjBE,QAAAA,GAAG,EAAEA,GADY;AAEjBE,QAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,CAAC,MAAZ,CAFS;AAEY;AAC7BC,QAAAA,IAAI,EAAE,CAHW;AAGR;AACTC,QAAAA,SAAS,EAAE,OAJM,CAIE;;AAJF,OAAd,CAAP;AAOAjB,MAAAA,KAAK,GAAG,IAAIM,KAAJ,CAAU;AACdP,QAAAA,IAAI,EAAEA,IADQ;AAEdmB,QAAAA,OAAO,EAAE,IAAIX,OAAJ,CAAY;AACjBY,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE,eADF;AAEJC,YAAAA,IAAI,EAAE,MAFF;AAGJC,YAAAA,KAAK,EAAE,OAHH;AAIJC,YAAAA,OAAO,EAAE;AACLD,cAAAA,KAAK,EAAE,SADF;AAELE,cAAAA,KAAK,EAAE;AAFF;AAJL;AADS,SAAZ,CAFK;AAadC,QAAAA,iBAAiB,EAAE;AAbL,OAAV,CAAR;AAeA1B,MAAAA,IAAI,CAAC2B,EAAL,CAAQC,GAAR,CAAY3B,KAAZ,EAAmB,UAAnB;AAEA,YAAM4B,MAAM,GAAG,CAAC,wBAAD,EAA2B,oBAA3B,EAAiD,aAAjD,EAAgE,aAAhE,EAA+E,MAA/E,EAAuF,OAAvF,CAAf;AACA,YAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiC,EAAjC,CAAf;AACAF,MAAAA,MAAM,CAACG,YAAP,CAAoB,OAApB,EAA6B,yBAA7B;AACAH,MAAAA,MAAM,CAACG,YAAP,CAAoB,OAApB,EAA6B,8DAA7B;AAEAJ,MAAAA,MAAM,CAACK,OAAP,CAAe,UAAUC,CAAV,EAAa;AACxB,cAAMC,MAAM,GAAGL,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAI,QAAAA,MAAM,CAACC,KAAP,GAAeF,CAAf;AACAC,QAAAA,MAAM,CAACE,SAAP,GAAmBH,CAAnB;AACAL,QAAAA,MAAM,CAACS,WAAP,CAAmBH,MAAnB;AACH,OALD;AAOApC,MAAAA,IAAI,CAAC2B,EAAL,CAAQC,GAAR,CAAYE,MAAZ,EAAoB,WAApB;AAEA,YAAMU,UAAU,GAAG,wEAAnB;;AACA,eAASC,UAAT,CAAoBC,QAApB,EAA8BC,EAA9B,EAAkC;AAC9BlC,QAAAA,OAAO,CAACmC,kBAAR,CAA2BJ,UAA3B,EAAuC;AACnCK,UAAAA,QAAQ,EAAEF,EADyB;AAEnCG,UAAAA,UAAU,EAAE,CAACJ,QAAD,CAFuB;AAGnCK,UAAAA,YAAY,EAAE,EAHqB;AAInCC,UAAAA,SAAS,EAAE,CAAC,YAAD,EAAe,WAAf;AAJwB,SAAvC,EAOK7C,IAPL,CAOU,UAAU8C,OAAV,EAAmB;AACrBjD,UAAAA,IAAI,CAACkD,KAAL,CAAWC,KAAX;AACAnD,UAAAA,IAAI,CAACoD,QAAL,CAAcC,SAAd;AAEAJ,UAAAA,OAAO,CAACf,OAAR,CAAgB,UAAUoB,MAAV,EAAkB;AAC9BtD,YAAAA,IAAI,CAACoD,QAAL,CAAcxB,GAAd,CACI,IAAIpB,OAAJ,CAAY;AACR+C,cAAAA,UAAU,EAAED,MAAM,CAACC,UADX;AACwB;AAChCC,cAAAA,QAAQ,EAAEF,MAAM,CAACT,QAFT;AAEmB;AAC3BzB,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE,eADF;AAEJE,gBAAAA,KAAK,EAAE,SAFH;AAGJD,gBAAAA,IAAI,EAAE,MAHF;AAIJE,gBAAAA,OAAO,EAAE;AACLD,kBAAAA,KAAK,EAAE,SADF;AAELE,kBAAAA,KAAK,EAAE;AAFF;AAJL,eAHA;AAaRgC,cAAAA,aAAa,EAAE;AACXC,gBAAAA,KAAK,EAAE,aADI;AACW;AACtBC,gBAAAA,OAAO,EAAE;AAFE;AAbP,aAAZ,CADJ;AAmBH,WApBD;AAsBH,SAjCL;AAmCH;;AACD3D,MAAAA,IAAI,CAAC4D,KAAL,CAAW,YAAX,EAAyB,UAAUC,GAAV,EAAe;AACpC,YAAIA,GAAJ,EAAS;AACLpB,UAAAA,UAAU,CAACX,MAAM,CAACO,KAAR,EAAerC,IAAI,CAACgB,MAApB,CAAV;AACH;AACJ,OAJD;AAMAc,MAAAA,MAAM,CAACgC,gBAAP,CAAwB,QAAxB,EAAkC,UAAUC,KAAV,EAAiB;AAC/CtB,QAAAA,UAAU,CAACsB,KAAK,CAACC,MAAN,CAAa3B,KAAd,EAAqBrC,IAAI,CAACgB,MAA1B,CAAV;AACH,OAFD;AAIA,UAAIiD,cAAc,GAAG,IAAIvD,cAAJ,CAAmB;AACpCV,QAAAA,IAAI,EAAEA,IAD8B;AAEpCkB,QAAAA,SAAS,EAAEa,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAFyB;AAGpCkC,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE;AACHT,YAAAA,KAAK,EAAE;AADJ;AADH;AAH4B,OAAnB,CAArB;AAUA,UAAIU,QAAQ,GAAG,IAAIzD,MAAJ,CAAW;AACtBX,QAAAA,IAAI,EAAEA,IADgB;AAEtB2D,QAAAA,OAAO,EAAEM,cAAc,CAACI,OAFF;AAGtBC,QAAAA,eAAe,EAAE;AAHK,OAAX,CAAf;AAMAtE,MAAAA,IAAI,CAAC2B,EAAL,CAAQC,GAAR,CAAYwC,QAAZ,EAAsB,cAAtB;AACH,KAhHD;AAiHA,WAAO,MAAM;AACT;AACA,UAAI,CAAC,CAACpE,IAAN,EAAY;AACRA,QAAAA,IAAI,CAACuE,OAAL;AACAvE,QAAAA,IAAI,GAAG,IAAP;AACH;AACJ,KAND;AAQH,GA9HI,CAAT;AA+HA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,EAAE,EAAC,OAAxB;AAAA,2BACI;AAAK,MAAA,KAAK,EAAE;AAAEwE,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAA+B,MAAA,GAAG,EAAEzE;AAApC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAvIQD,G;;KAAAA,G;AAyIT,eAAeA,GAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { loadModules } from 'esri-loader';\r\n\r\nfunction Map() {\r\n    const MapEl = useRef(null);\r\n\r\n    useEffect(\r\n        () => {\r\n            let view;\r\n            let track;\r\n\r\n            loadModules([\"esri/config\", \"esri/views/MapView\", \"esri/WebMap\", \"esri/widgets/Track\", \"esri/Graphic\", \"esri/rest/locator\", \"esri/widgets/BasemapGallery\", \"esri/widgets/Expand\", \"esri/views/SceneView\"], {\r\n                css: true\r\n            }).then(([esriConfig, MapView, WebMap, Track, Graphic, locator, BasemapGallery, Expand, SceneView]) => {\r\n                esriConfig.apiKey = \"AAPK646fc7baa89c4b608eb58b54dbbbe1066JR7fGrtnfyFPoTQnl4Z7yp0rUqUJMjQUrurVPBVnBAt75VOFZL-g-La4SwrdiZf\";\r\n\r\n                const map = new WebMap({\r\n                    basemap: 'streets'\r\n                })\r\n\r\n                view = new SceneView({\r\n                    map: map,\r\n                    center: [106.6182, -6.2567], // Longitude, latitude\r\n                    zoom: 3, // Zoom level\r\n                    container: \"MapEl\" // Div element\r\n                });\r\n\r\n                track = new Track({\r\n                    view: view,\r\n                    graphic: new Graphic({\r\n                        symbol: {\r\n                            type: \"simple-marker\",\r\n                            size: \"12px\",\r\n                            color: \"green\",\r\n                            outline: {\r\n                                color: \"#efefef\",\r\n                                width: \"1.5px\"\r\n                            }\r\n                        }\r\n                    }),\r\n                    useHeadingEnabled: false\r\n                });\r\n                view.ui.add(track, \"top-left\");\r\n\r\n                const places = [\"Choose a place type...\", \"Parks and Outdoors\", \"Coffee shop\", \"Gas station\", \"Food\", \"Hotel\"];\r\n                const select = document.createElement(\"select\", \"\");\r\n                select.setAttribute(\"class\", \"esri-widget esri-select\");\r\n                select.setAttribute(\"style\", \"width: 175px; font-family: 'Avenir Next W00'; font-size: 1em\");\r\n\r\n                places.forEach(function (p) {\r\n                    const option = document.createElement(\"option\");\r\n                    option.value = p;\r\n                    option.innerHTML = p;\r\n                    select.appendChild(option);\r\n                });\r\n\r\n                view.ui.add(select, \"top-right\");\r\n\r\n                const locatorUrl = \"http://geocode-api.arcgis.com/arcgis/rest/services/World/GeocodeServer\";\r\n                function findPlaces(category, pt) {\r\n                    locator.addressToLocations(locatorUrl, {\r\n                        location: pt,\r\n                        categories: [category],\r\n                        maxLocations: 25,\r\n                        outFields: [\"Place_addr\", \"PlaceName\"]\r\n                    })\r\n\r\n                        .then(function (results) {\r\n                            view.popup.close();\r\n                            view.graphics.removeAll();\r\n\r\n                            results.forEach(function (result) {\r\n                                view.graphics.add(\r\n                                    new Graphic({\r\n                                        attributes: result.attributes,  // Data attributes returned\r\n                                        geometry: result.location, // Point returned\r\n                                        symbol: {\r\n                                            type: \"simple-marker\",\r\n                                            color: \"#000000\",\r\n                                            size: \"12px\",\r\n                                            outline: {\r\n                                                color: \"#ffffff\",\r\n                                                width: \"2px\"\r\n                                            }\r\n                                        },\r\n\r\n                                        popupTemplate: {\r\n                                            title: \"{PlaceName}\", // Data attribute names\r\n                                            content: \"{Place_addr}\"\r\n                                        }\r\n                                    }));\r\n                            });\r\n\r\n                        });\r\n\r\n                }\r\n                view.watch(\"stationary\", function (val) {\r\n                    if (val) {\r\n                        findPlaces(select.value, view.center);\r\n                    }\r\n                });\r\n\r\n                select.addEventListener('change', function (event) {\r\n                    findPlaces(event.target.value, view.center);\r\n                });\r\n\r\n                var basemapGallery = new BasemapGallery({\r\n                    view: view,\r\n                    container: document.createElement(\"div\"),\r\n                    source: {\r\n                        query: {\r\n                            title: '\"World Basemaps for Developers\" AND owner:esri'\r\n                        }\r\n                    }\r\n                });\r\n\r\n                var bgExpand = new Expand({\r\n                    view: view,\r\n                    content: basemapGallery.domNode,\r\n                    expandIconClass: \"esri-icon-basemap\"\r\n                });\r\n\r\n                view.ui.add(bgExpand, \"bottom-right\");\r\n            })\r\n            return () => {\r\n                //close the map view\r\n                if (!!view) {\r\n                    view.destroy()\r\n                    view = null\r\n                }\r\n            }\r\n\r\n        })\r\n    return (\r\n        <div className=\"App\" id=\"MapEl\">\r\n            <div style={{ height: 578.5 }} ref={MapEl}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map"]},"metadata":{},"sourceType":"module"}