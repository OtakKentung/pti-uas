/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../Color","../../core/Logger","../../core/maybe","../../core/screenUtils","../../core/string","../../support/arcadeOnDemand","./CIMSymbolHelper","./SDFHelper","./utils","./effects/CIMEffectHelper","../../views/2d/arcade/callExpressionWithFeature"],(function(e,t,i,r,o,n,l,a,s,c,f,m,u){"use strict";const p=r.getLogger("esri.symbols.cim.cimAnalyzer");function h(e){switch(e){case"Butt":return 0;case"Square":return 2;default:return 1}}function y(e){switch(e){case"Bevel":return 0;case"Miter":return 2;default:return 1}}function g(e){switch(e){case"Left":default:return"left";case"Right":return"right";case"Center":return"center";case"Justify":return"justify"}}function S(e){switch(e){case"Top":default:return"top";case"Center":return"middle";case"Baseline":return"baseline";case"Bottom":return"bottom"}}function d(e){let t="",i="";if(e){const r=e.toLowerCase();-1!==r.indexOf("italic")?t="italic":-1!==r.indexOf("oblique")&&(t="oblique"),-1!==r.indexOf("bold")?i="bold":-1!==r.indexOf("light")&&(i="lighter")}return{style:t,weight:i}}function C(e){return e.underline?"underline":e.strikethrough?"line-through":"none"}function b(e,t,i,r){let o;e[t]?o=e[t]:(o={},e[t]=o),o[i]=r}function v(e){const t=e.markerPlacement;return t&&t.angleToLine?1:0}function N(e,t,i,r,o){return k.apply(this,arguments)}function k(){return(k=t._asyncToGenerator((function*(e,t,i,r,o){const n=null!=r?r:[];if(!e)return n;let l,s;const c={};if("CIMSymbolReference"!==e.type)return p.error("Expect cim type to be 'CIMSymbolReference'"),n;if(l=e.symbol,s=e.primitiveOverrides,s){const e=[];for(const i of s){const r=i.valueExpressionInfo;if(r&&t){const o=r.expression,n=a.createRendererExpression(o,t.spatialReference,t.fields).then((e=>{e&&b(c,i.primitiveName,i.propertyName,e)}));e.push(n)}else null!=i.value&&b(c,i.primitiveName,i.propertyName,i.value)}e.length>0&&(yield Promise.all(e))}const f=[];switch(j(l,i,f),f.length>0&&(yield Promise.all(f)),l.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":O(l,s,c,t,n,i,o)}return n}))).apply(this,arguments)}function O(e,t,i,r,o,n,l){if(!e)return;const a=e.symbolLayers;if(!a)return;const c=e.effects;let f;const m=s.CIMSymbolHelper.getSize(e);"CIMPointSymbol"===e.type&&"Map"===e.angleAlignment&&(f=1);let u=a.length;for(;u--;){const h=a[u];if(!h||!1===h.enable)continue;let y;c&&c.length&&(y=[...c]);const g=h.effects;g&&g.length&&(c?y.push(...g):y=[...g]);const S=[];switch(s.OverrideHelper.findApplicableOverrides(h,t,S),h.type){case"CIMSolidFill":M(h,y,i,S,r,o);break;case"CIMPictureFill":I(h,y,i,S,r,n,o);break;case"CIMHatchFill":H(h,y,i,S,r,o);break;case"CIMGradientFill":P(h,y,i,S,r,o);break;case"CIMSolidStroke":L(h,y,i,S,r,o,"CIMPolygonSymbol"===e.type,m);break;case"CIMPictureStroke":w(h,y,i,S,r,o,"CIMPolygonSymbol"===e.type,m);break;case"CIMGradientStroke":x(h,y,i,S,r,o,"CIMPolygonSymbol"===e.type,m);break;case"CIMCharacterMarker":if(X(h,y,i,S,r,o))break;break;case"CIMPictureMarker":if(X(h,y,i,S,r,o))break;"CIMLineSymbol"===e.type&&(f=v(h)),z(h,y,i,S,r,n,o,f,m);break;case"CIMVectorMarker":if(X(h,y,i,S,r,o))break;"CIMLineSymbol"===e.type&&(f=v(h)),J(h,y,i,S,r,o,n,f,m,l);break;default:p.error("Cannot analyze CIM layer",h.type)}}}function M(e,t,i,r,o,n){const a=e.primitiveName,s=f.fromCIMColor(e.color),[c,m]=G(r,a),u=l.numericHash(JSON.stringify(e)+m).toString();n.push({type:"fill",templateHash:u,materialHash:c?()=>u:u,cim:e,materialOverrides:null,colorLocked:e.colorLocked,color:W(a,i,"Color",o,s,E),height:0,angle:0,offsetX:0,offsetY:0,scaleX:1,effects:t})}function I(e,t,i,r,n,a,s){const c=e.primitiveName,m=e.tintColor?f.fromCIMColor(e.tintColor):{r:255,g:255,b:255,a:1},[u,p]=G(r,c),h=l.numericHash(JSON.stringify(e)+p).toString(),y=l.numericHash(`${e.url}${JSON.stringify(e.colorSubstitutions)}`).toString();let g=f.getValue(e.scaleX);if("width"in e){const t=e.width;let i=1;const r=a.getResource(e.url);o.isSome(r)&&(i=r.width/r.height),g/=i*(e.height/t)}s.push({type:"fill",templateHash:h,materialHash:u?()=>y:y,cim:e,materialOverrides:null,colorLocked:e.colorLocked,effects:t,color:W(c,i,"TintColor",n,m,E),height:W(c,i,"Height",n,e.height),scaleX:W(c,i,"ScaleX",n,g),angle:W(c,i,"Rotation",n,f.getValue(e.rotation)),offsetX:W(c,i,"OffsetX",n,f.getValue(e.offsetX)),offsetY:W(c,i,"OffsetY",n,f.getValue(e.offsetY)),url:e.url})}function H(e,t,i,r,o,n){const a=["Rotation","OffsetX","OffsetY"],s=r.filter((t=>t.primitiveName!==e.primitiveName&&-1===a.indexOf(t.propertyName))),c=e.primitiveName,[m,u]=G(r,c),p=l.numericHash(JSON.stringify(e)+u).toString(),h=l.numericHash(`${e.separation}${JSON.stringify(e.lineSymbol)}`).toString();n.push({type:"fill",templateHash:p,materialHash:m?T(h,i,s,o):h,cim:e,materialOverrides:s,colorLocked:e.colorLocked,effects:t,color:{r:255,g:255,b:255,a:1},height:W(c,i,"Separation",o,e.separation),scaleX:1,angle:W(c,i,"Rotation",o,f.getValue(e.rotation)),offsetX:W(c,i,"OffsetX",o,f.getValue(e.offsetX)),offsetY:W(c,i,"OffsetY",o,f.getValue(e.offsetY))})}function P(e,t,i,r,o,n){const a=e.primitiveName,[s,c]=G(r,a),f=l.numericHash(JSON.stringify(e)+c).toString();n.push({type:"fill",templateHash:f,materialHash:s?T(f,i,r,o):f,cim:e,materialOverrides:null,colorLocked:e.colorLocked,effects:t,color:{r:128,g:128,b:128,a:1},height:0,angle:0,offsetX:0,offsetY:0,scaleX:1})}function L(e,t,i,r,o,n,a,s){const c=e.primitiveName,m=f.fromCIMColor(e.color),u=void 0!==e.width?e.width:4,p=h(e.capStyle),g=y(e.joinStyle),S=e.miterLimit,[d,C]=G(r,c),b=l.numericHash(JSON.stringify(e)+C).toString();let v,N;if(t&&t.length>0){const i=t[t.length-1];if("CIMGeometricEffectDashes"===i.type&&"NoConstraint"===i.lineDashEnding){const i=(t=[...e.effects]).pop();v=i.dashTemplate,N=i.scaleDash}}n.push({type:"line",templateHash:b,materialHash:d?()=>b:b,cim:e,materialOverrides:null,isOutline:a,colorLocked:e.colorLocked,effects:t,color:W(c,i,"Color",o,m,E),width:W(c,i,"Width",o,u),cap:W(c,i,"CapStyle",o,p),join:W(c,i,"JoinStyle",o,g),miterLimit:W(c,i,"MiterLimit",o,S),referenceWidth:s,zOrder:$(e.name),dashTemplate:v,scaleDash:N})}function w(e,t,i,r,o,n,a,s){const c=l.numericHash(`${e.url}${JSON.stringify(e.colorSubstitutions)}`).toString(),m=e.primitiveName,u=f.fromCIMColor(e.tintColor),p=void 0!==e.width?e.width:4,g=h(e.capStyle),S=y(e.joinStyle),d=e.miterLimit,[C,b]=G(r,m),v=l.numericHash(JSON.stringify(e)+b).toString();n.push({type:"line",templateHash:v,materialHash:C?()=>c:c,cim:e,materialOverrides:null,isOutline:a,colorLocked:e.colorLocked,effects:t,color:W(m,i,"TintColor",o,u,E),width:W(m,i,"Width",o,p),cap:W(m,i,"CapStyle",o,g),join:W(m,i,"JoinStyle",o,S),miterLimit:W(m,i,"MiterLimit",o,d),referenceWidth:s,zOrder:$(e.name),dashTemplate:null,scaleDash:!1,url:e.url})}function x(e,t,i,r,o,n,a,s){const c=e.primitiveName,f=void 0!==e.width?e.width:4,m=h(e.capStyle),u=y(e.joinStyle),p=e.miterLimit,[g,S]=G(r,c),d=l.numericHash(JSON.stringify(e)+S).toString();n.push({type:"line",templateHash:d,materialHash:g?T(d,i,r,o):d,cim:e,materialOverrides:null,isOutline:a,colorLocked:e.colorLocked,effects:t,color:{r:128,g:128,b:128,a:1},width:W(c,i,"Width",o,f),cap:W(c,i,"CapStyle",o,m),join:W(c,i,"JoinStyle",o,u),miterLimit:W(c,i,"MiterLimit",o,p),referenceWidth:s,zOrder:$(e.name),dashTemplate:null,scaleDash:!1})}function X(e,t,i,r,o,n){const a=e.markerPlacement;if(!a||"CIMMarkerPlacementInsidePolygon"!==a.type)return!1;const s=a,c=["Rotation","OffsetX","OffsetY"],m=r.filter((t=>t.primitiveName!==e.primitiveName&&-1===c.indexOf(t.propertyName))),u="url"in e?e.url:null,[p,h]=G(r,s.primitiveName),y=l.numericHash(JSON.stringify(e)+h).toString();let g=s.stepY,S=null,d=1;return a.shiftOddRows&&(g*=2,S=function(e){return e?2*e:0},d=.5),n.push({type:"fill",templateHash:y,materialHash:p?T(y,i,m,o):y,cim:e,materialOverrides:m,colorLocked:e.colorLocked,effects:t,color:{r:255,g:255,b:255,a:1},height:W(s.primitiveName,i,"StepY",o,g,S),scaleX:d,angle:W(s.primitiveName,i,"GridAngle",o,s.gridAngle),offsetX:W(s.primitiveName,i,"OffsetX",o,f.getValue(s.offsetX)),offsetY:W(s.primitiveName,i,"OffsetY",o,f.getValue(s.offsetY)),url:u}),!0}function z(e,t,i,r,n,a,s,c,m){var u;const p=e.primitiveName,h=f.getValue(e.size);let y=f.getValue(e.scaleX);const g=f.getValue(e.rotation),S=f.getValue(e.offsetX),d=f.getValue(e.offsetY),C=e.tintColor?f.fromCIMColor(e.tintColor):{r:255,g:255,b:255,a:1},b=l.numericHash(`${e.url}${JSON.stringify(e.colorSubstitutions)}`).toString(),[v,N]=G(r,p),k=l.numericHash(JSON.stringify(e)+N).toString(),O=null!=(u=e.anchorPoint)?u:{x:0,y:0};if("width"in e){const t=e.width;let i=1;const r=a.getResource(e.url);o.isSome(r)&&(i=r.width/r.height),y/=i*(h/t)}s.push({type:"marker",templateHash:k,materialHash:v?()=>b:b,cim:e,materialOverrides:null,colorLocked:e.colorLocked,effects:t,scaleSymbolsProportionally:!1,alignment:c,size:W(p,i,"Size",n,h),scaleX:W(p,i,"ScaleX",n,y),rotation:W(p,i,"Rotation",n,g),offsetX:W(p,i,"OffsetX",n,S),offsetY:W(p,i,"OffsetY",n,d),color:W(p,i,"TintColor",n,C,E),anchorPoint:{x:O.x,y:-O.y},isAbsoluteAnchorPoint:"Relative"!==e.anchorPointUnits,outlineColor:{r:0,g:0,b:0,a:0},outlineWidth:0,frameHeight:0,rotateClockwise:e.rotateClockwise,referenceSize:m,sizeRatio:1,markerPlacement:e.markerPlacement,url:e.url})}function J(e,t,i,r,o,n,l,a,s,c){const f=e.markerGraphics;if(!f)return;let m=0;if(e.scaleSymbolsProportionally){const t=e.frame;t&&(m=t.ymax-t.ymin)}for(const u of f)if(u){const f=u.symbol;if(!f)continue;switch(f.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":Y(e,t,u,r,i,o,n,l,a,s,m,c);break;case"CIMTextSymbol":V(e,t,u,i,r,o,n,a,s,m)}}}function V(e,t,i,r,o,n,a,c,m,u){const p=[];s.OverrideHelper.findApplicableOverrides(i,o,p);const h=i.geometry;if(!("x"in h)||!("y"in h))return;const y=i.symbol,b=C(y),v=d(y.fontStyleName),N=f.toKebabCase(y.fontFamilyName);y.font={family:N,decoration:b,...v};const k=e.frame,O=h.x-.5*(k.xmin+k.xmax),M=h.y-.5*(k.ymin+k.ymax),I=e.size/u,H=e.primitiveName,P=f.getValue(y.height)*I,L=f.getValue(y.angle),w=(f.getValue(y.offsetX)+O)*I,x=(f.getValue(y.offsetY)+M)*I,X=f.fromCIMColor(s.CIMSymbolHelper.getFillColor(y));let z=f.fromCIMColor(s.CIMSymbolHelper.getStrokeColor(y)),J=s.CIMSymbolHelper.getStrokeWidth(y);J||(z=f.fromCIMColor(s.CIMSymbolHelper.getFillColor(y.haloSymbol)),J=y.haloSize*I);const[V,Y]=G(o,H),R=JSON.stringify(e.effects)+Number(e.colorLocked)+JSON.stringify(e.anchorPoint)+e.anchorPointUnits+JSON.stringify(e.markerPlacement),A=l.numericHash(JSON.stringify(i)+R+Y).toString(),F=l.numericHash(JSON.stringify(y.font)).toString(),$=W(i.primitiveName,r,"TextString",n,i.textString,f._adjustTextCase,y.textCase),{fontStyleName:E}=y,T=N+(E?"-"+E.toLowerCase():"-regular");a.push({type:"text",templateHash:A,materialHash:V||"function"==typeof $||$.match(/\[([\w]+)\]/)?(e,t,i)=>F+"-"+f.evaluateValueOrFunction($,e,t,i):F+"-"+l.numericHash($),cim:y,materialOverrides:null,colorLocked:e.colorLocked,effects:t,alignment:c,anchorPoint:{x:e.anchorPoint?e.anchorPoint.x:0,y:e.anchorPoint?e.anchorPoint.y:0},isAbsoluteAnchorPoint:"Relative"!==e.anchorPointUnits,fontName:T,decoration:b,weight:W(H,r,"Weight",n,v.weight),style:W(H,r,"Size",n,v.style),size:W(H,r,"Size",n,P),angle:W(H,r,"Rotation",n,L),offsetX:W(H,r,"OffsetX",n,w),offsetY:W(H,r,"OffsetY",n,x),horizontalAlignment:g(y.horizontalAlignment),verticalAlignment:S(y.verticalAlignment),text:$,color:X,outlineColor:z,outlineSize:J,referenceSize:m,sizeRatio:1,markerPlacement:e.markerPlacement})}function Y(e,t,i,r,o,n,a,u,p,h,y,g){const S=i.symbol,d=S.symbolLayers;if(!d)return;if(g)return void A(e,t,i,o,r,n,a,u,p,h,y);let C=d.length;if(U(d))return void R(e,i,d,r,o,n,a,p,h,y);const b=m.CIMEffectHelper.applyEffects(S.effects,i.geometry);if(b)for(;C--;){const g=d[C];if(g&&!1!==g.enable)switch(g.type){case"CIMSolidFill":case"CIMSolidStroke":{var v;const u=m.CIMEffectHelper.applyEffects(g.effects,b),S=c.getExtent(u);if(!S)continue;const[d,C,N]=c.getSDFMetrics(S,e.frame,e.size,e.anchorPoint,"Relative"!==e.anchorPointUnits),k="CIMSolidFill"===g.type,O={type:"sdf",geom:u,asFill:k},M=e.primitiveName,I=null!=(v=f.getValue(e.size))?v:10,H=f.getValue(e.rotation),P=f.getValue(e.offsetX),L=f.getValue(e.offsetY),w=g.path,x=g.primitiveName,X=k?f.fromCIMColor(s.CIMSymbolHelper.getFillColor(g)):f.fromCIMColor(s.CIMSymbolHelper.getStrokeColor(g)),z=k?{r:0,g:0,b:0,a:0}:f.fromCIMColor(s.CIMSymbolHelper.getStrokeColor(g)),J=s.CIMSymbolHelper.getStrokeWidth(g);if(!k&&!J)break;let V=!1,Y="";for(const e of r)e.primitiveName!==x&&e.primitiveName!==M||(void 0!==e.value?Y+=`-${e.primitiveName}-${e.propertyName}-${JSON.stringify(e.value)}`:e.valueExpressionInfo&&(V=!0));const R=JSON.stringify({...e,markerGraphics:null}),A=l.numericHash(JSON.stringify(O)+w).toString(),F={type:"marker",templateHash:l.numericHash(JSON.stringify(i)+JSON.stringify(g)+R+Y).toString(),materialHash:V?()=>A:A,cim:O,materialOverrides:null,colorLocked:e.colorLocked,effects:t,scaleSymbolsProportionally:e.scaleSymbolsProportionally,alignment:p,anchorPoint:{x:C,y:N},isAbsoluteAnchorPoint:!1,size:W(e.primitiveName,o,"Size",n,I),rotation:W(e.primitiveName,o,"Rotation",n,H),offsetX:W(e.primitiveName,o,"OffsetX",n,P),offsetY:W(e.primitiveName,o,"OffsetY",n,L),scaleX:1,frameHeight:y,rotateClockwise:e.rotateClockwise,referenceSize:h,sizeRatio:d,color:W(x,o,"Color",n,X,E),outlineColor:W(x,o,"Color",n,z,E),outlineWidth:W(x,o,"Width",n,J),markerPlacement:e.markerPlacement,path:w};a.push(F);break}default:A(e,t,i,o,r,n,a,u,p,h,y)}}}function R(e,t,i,r,o,n,a,m,u,p){const h=t.geometry,y=i[0],g=i[1],S=c.getExtent(h);if(!S)return;const[d,C,b]=c.getSDFMetrics(S,e.frame,e.size,e.anchorPoint,"Relative"!==e.anchorPointUnits),v={type:"sdf",geom:h,asFill:!0},N=e.primitiveName,k=f.getValue(e.size),O=f.getValue(e.rotation),M=f.getValue(e.offsetX),I=f.getValue(e.offsetY),H=g.path,P=g.primitiveName,L=y.primitiveName,w=f.fromCIMColor(s.CIMSymbolHelper.getFillColor(g)),x=f.fromCIMColor(s.CIMSymbolHelper.getStrokeColor(y)),X=s.CIMSymbolHelper.getStrokeWidth(y);let z=!1,J="";for(const l of r)l.primitiveName!==P&&l.primitiveName!==L&&l.primitiveName!==N||(void 0!==l.value?J+=`-${l.primitiveName}-${l.propertyName}-${JSON.stringify(l.value)}`:l.valueExpressionInfo&&(z=!0));const V=JSON.stringify({...e,markerGraphics:null}),Y=l.numericHash(JSON.stringify(v)+H).toString(),R={type:"marker",templateHash:l.numericHash(JSON.stringify(t)+JSON.stringify(g)+JSON.stringify(y)+V+J).toString(),materialHash:z?()=>Y:Y,cim:v,materialOverrides:null,colorLocked:e.colorLocked,effects:e.effects,scaleSymbolsProportionally:e.scaleSymbolsProportionally,alignment:m,anchorPoint:{x:C,y:b},isAbsoluteAnchorPoint:!1,size:W(e.primitiveName,o,"Size",n,k),rotation:W(e.primitiveName,o,"Rotation",n,O),offsetX:W(e.primitiveName,o,"OffsetX",n,M),offsetY:W(e.primitiveName,o,"OffsetY",n,I),scaleX:1,frameHeight:p,rotateClockwise:e.rotateClockwise,referenceSize:u,sizeRatio:d,color:W(P,o,"Color",n,w,E),outlineColor:W(L,o,"Color",n,x,E),outlineWidth:W(L,o,"Width",n,X),markerPlacement:e.markerPlacement,path:H};a.push(R)}function A(e,t,i,r,o,a,c,m,u,p,h){const y=F(e,i);let g=[];const S=["Rotation","OffsetX","OffsetY"];g=o.filter((t=>t.primitiveName!==e.primitiveName||-1===S.indexOf(t.propertyName)));let d="";for(const n of o)void 0!==n.value&&(d+=`-${n.primitiveName}-${n.propertyName}-${JSON.stringify(n.value)}`);const[C,b,v]=s.CIMSymbolHelper.getTextureAnchor(y,m),N=e.primitiveName,k=f.getValue(e.rotation),O=f.getValue(e.offsetX),M=f.getValue(e.offsetY),I=l.numericHash(JSON.stringify(y)+d).toString(),H={type:"marker",templateHash:I,materialHash:0===g.length?I:T(I,r,g,a),cim:y,materialOverrides:g,colorLocked:e.colorLocked,effects:t,scaleSymbolsProportionally:e.scaleSymbolsProportionally,alignment:u,anchorPoint:{x:C,y:b},isAbsoluteAnchorPoint:!1,size:e.size,rotation:W(N,r,"Rotation",a,k),offsetX:W(N,r,"OffsetX",a,O),offsetY:W(N,r,"OffsetY",a,M),color:{r:255,g:255,b:255,a:1},outlineColor:{r:0,g:0,b:0,a:0},outlineWidth:0,scaleX:1,frameHeight:h,rotateClockwise:e.rotateClockwise,referenceSize:p,sizeRatio:v/n.pt2px(e.size),markerPlacement:e.markerPlacement};c.push(H)}function F(e,t){return{type:e.type,enable:!0,name:e.name,colorLocked:e.colorLocked,primitiveName:e.primitiveName,anchorPoint:e.anchorPoint,anchorPointUnits:e.anchorPointUnits,offsetX:0,offsetY:0,rotateClockwise:e.rotateClockwise,rotation:0,size:e.size,billboardMode3D:e.billboardMode3D,depth3D:e.depth3D,frame:e.frame,markerGraphics:[t],scaleSymbolsProportionally:e.scaleSymbolsProportionally,respectFrame:e.respectFrame,clippingPath:e.clippingPath}}function $(e){if(e&&0===e.indexOf("Level_")){const t=parseInt(e.substr(6),10);if(NaN!==t)return t}return 0}function E(e){if(!e||0===e.length)return null;const t=new i(e).toRgba();return{r:t[0],g:t[1],b:t[2],a:t[3]}}function W(e,t,i,r,o,n,l){const s=t[e];if(s){const e=s[i];if("string"==typeof e||"number"==typeof e||e instanceof Array)return n?n.call(null,e,l):e;if(null!=e&&e instanceof a.ArcadeExpression)return(t,i,a)=>{let s=u(e,t,{$view:a},r.geometryType,i);return null!==s&&n&&(s=n.call(null,s,l)),null!==s?s:o}}return o}function T(e,t,i,r){for(const o of i){if(o.valueExpressionInfo){const e=t[o.primitiveName]&&t[o.primitiveName][o.propertyName];e instanceof a.ArcadeExpression&&(o.fn=(t,i,o)=>u(e,t,{$view:o},r.geometryType,i))}}return(t,r,o)=>{for(const e of i)e.fn&&(e.value=e.fn(t,r,o));return l.numericHash(e+s.OverrideHelper.buildOverrideKey(i)).toString()}}function D(e,t){if(!t||0===t.length)return e;const i=JSON.parse(JSON.stringify(e));return s.OverrideHelper.applyOverrides(i,t),i}function G(e,t){let i=!1,r="";for(const o of e)o.primitiveName===t&&(void 0!==o.value?r+=`-${o.primitiveName}-${o.propertyName}-${JSON.stringify(o.value)}`:o.valueExpressionInfo&&(i=!0));return[i,r]}function j(e,t,i){if(e&&t)switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":{const r=e.symbolLayers;if(!r)return;for(const e of r)switch(e.type){case"CIMPictureFill":case"CIMHatchFill":case"CIMGradientFill":case"CIMPictureStroke":case"CIMGradientStroke":case"CIMCharacterMarker":case"CIMPictureMarker":"url"in e&&e.url&&i.push(t.fetchResource(e.url,null));break;case"CIMVectorMarker":{const r=e.markerGraphics;if(!r)continue;for(const e of r)if(e){const r=e.symbol;r&&j(r,t,i)}}}}}}const U=e=>e&&2===e.length&&e[0].enable&&e[1].enable&&"CIMSolidStroke"===e[0].type&&"CIMSolidFill"===e[1].type&&!e[0].effects&&!e[1].effects;e.analyzeCIMResource=D,e.analyzeCIMSymbol=N,Object.defineProperty(e,"__esModule",{value:!0})}));
